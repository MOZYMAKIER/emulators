set(DEFINITIONS_CORE_X
        -DJSDOS
        -DHAVE_CONFIG_H
        -DC_SDL2
        -DC_IPX
        -DC_FORCE_MENU_SDLDRAW
        -DLIBSERIAL
        -DRESDIR="/tmp/dosbox-x"
        # missed in libserial.cpp
        -DCBAUD=0
        -DCMSPAR=0
        )

if (${EMSCRIPTEN})
    list(APPEND DEFINITIONS_CORE_X -DC_EMSCRIPTEN)
else ()
    find_package(SDL2 REQUIRED)
endif ()


set(DBX_PATH "${NATIVE_DIR}/dosbox-x")

set(SOURCES_X_CORE
        "${DBX_PATH}/src/dosbox.cpp"
        "${DBX_PATH}/src/misc/ethernet_slirp.cpp"
        "${DBX_PATH}/src/misc/messages.cpp"
        "${DBX_PATH}/src/misc/iconvpp.cpp"
        "${DBX_PATH}/src/misc/setup.cpp"
        "${DBX_PATH}/src/misc/ethernet.cpp"
        "${DBX_PATH}/src/misc/cross.cpp"
        "${DBX_PATH}/src/misc/savestates.cpp"
        "${DBX_PATH}/src/misc/programs.cpp"
        "${DBX_PATH}/src/misc/ethernet_pcap.cpp"
        "${DBX_PATH}/src/misc/mkdir_p.cpp"
        #	"${DBX_PATH}/src/misc/winiconv.c"
        "${DBX_PATH}/src/misc/support.cpp"
        "${DBX_PATH}/src/misc/clipboard.cpp"
        "${DBX_PATH}/src/misc/regionalloctracking.cpp"
        "${DBX_PATH}/src/misc/shiftjis.cpp"
        "${DBX_PATH}/src/hardware/pic.cpp"
        "${DBX_PATH}/src/hardware/vga_memory.cpp"
        "${DBX_PATH}/src/hardware/memory.cpp"
        "${DBX_PATH}/src/hardware/glide.cpp"
        "${DBX_PATH}/src/hardware/ide.cpp"
        "${DBX_PATH}/src/hardware/pc98_fm.cpp"
        "${DBX_PATH}/src/hardware/hardware.cpp"
        "${DBX_PATH}/src/hardware/vga_other.cpp"
        "${DBX_PATH}/src/hardware/dongle.cpp"
        "${DBX_PATH}/src/hardware/dma.cpp"
        "${DBX_PATH}/src/hardware/voodoo_opengl.cpp"
        "${DBX_PATH}/src/hardware/pci_bus.cpp"
        "${DBX_PATH}/src/hardware/timer.cpp"
        "${DBX_PATH}/src/hardware/vga_pc98_egc.cpp"
        "${DBX_PATH}/src/hardware/8255.cpp"
        "${DBX_PATH}/src/hardware/vga_pc98_dac.cpp"
        "${DBX_PATH}/src/hardware/gus.cpp"
        "${DBX_PATH}/src/hardware/gameblaster.cpp"
        "${DBX_PATH}/src/hardware/vga_draw.cpp"
        "${DBX_PATH}/src/hardware/vga_pc98_cg.cpp"
        "${DBX_PATH}/src/hardware/sblaster.cpp"
        "${DBX_PATH}/src/hardware/tandy_sound.cpp"
        "${DBX_PATH}/src/hardware/pc98.cpp"
        "${DBX_PATH}/src/hardware/hardopl.cpp"
        "${DBX_PATH}/src/hardware/voodoo_vogl.cpp"
        "${DBX_PATH}/src/hardware/innova.cpp"
        "${DBX_PATH}/src/hardware/vga_gfx.cpp"
        "${DBX_PATH}/src/hardware/disney.cpp"
        "${DBX_PATH}/src/hardware/vga_attr.cpp"
        "${DBX_PATH}/src/hardware/ps1_sound.cpp"
        "${DBX_PATH}/src/hardware/vga_xga.cpp"
        "${DBX_PATH}/src/hardware/voodoo.cpp"
        "${DBX_PATH}/src/hardware/iohandler.cpp"
        "${DBX_PATH}/src/hardware/vga_tseng.cpp"
        "${DBX_PATH}/src/hardware/adlib.cpp"
        "${DBX_PATH}/src/hardware/cmos.cpp"
        "${DBX_PATH}/src/hardware/voodoo_interface.cpp"
        "${DBX_PATH}/src/hardware/vga_dac.cpp"
        "${DBX_PATH}/src/hardware/vga_pc98_crtc.cpp"
        "${DBX_PATH}/src/hardware/pcspeaker.cpp"
        "${DBX_PATH}/src/hardware/vga_crtc.cpp"
        "${DBX_PATH}/src/hardware/vga_pc98_gdc.cpp"
        "${DBX_PATH}/src/hardware/dbopl.cpp"
        "${DBX_PATH}/src/hardware/opl.cpp"
        "${DBX_PATH}/src/hardware/vga_paradise.cpp"
        "${DBX_PATH}/src/hardware/floppy.cpp"
        "${DBX_PATH}/src/hardware/nukedopl.cpp"
        "${DBX_PATH}/src/hardware/vga_pc98_gdc_draw.cpp"
        "${DBX_PATH}/src/hardware/mpu401.cpp"
        "${DBX_PATH}/src/hardware/keyboard.cpp"
        "${DBX_PATH}/src/hardware/joystick.cpp"
        "${DBX_PATH}/src/hardware/vga.cpp"
        "${DBX_PATH}/src/hardware/ne2000.cpp"
        "${DBX_PATH}/src/hardware/vga_misc.cpp"
        "${DBX_PATH}/src/hardware/voodoo_emu.cpp"
        "${DBX_PATH}/src/hardware/vga_s3.cpp"
        "${DBX_PATH}/src/hardware/vga_seq.cpp"
        "${DBX_PATH}/src/hardware/opl2board/opl2board.cpp"
        "${DBX_PATH}/src/hardware/mame/ymf262.cpp"
        "${DBX_PATH}/src/hardware/mame/fmopl.cpp"
        "${DBX_PATH}/src/hardware/mame/ymdeltat.cpp"
        "${DBX_PATH}/src/hardware/mame/saa1099.cpp"
        "${DBX_PATH}/src/hardware/mame/sn76496.cpp"
        "${DBX_PATH}/src/hardware/reSID/voice.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave8580_PST.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave6581_P_T.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave.cpp"
        "${DBX_PATH}/src/hardware/reSID/version.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave6581_PS_.cpp"
        "${DBX_PATH}/src/hardware/reSID/pot.cpp"
        "${DBX_PATH}/src/hardware/reSID/sid.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave6581__ST.cpp"
        "${DBX_PATH}/src/hardware/reSID/filter.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave8580_PS_.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave8580__ST.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave6581_PST.cpp"
        "${DBX_PATH}/src/hardware/reSID/extfilt.cpp"
        "${DBX_PATH}/src/hardware/reSID/wave8580_P_T.cpp"
        "${DBX_PATH}/src/hardware/reSID/envelope.cpp"
        "${DBX_PATH}/src/hardware/snd_pc98/common/parts.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/boardx2.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/boardpx.c"
        "${DBX_PATH}/src/hardware/snd_pc98/cbus/pcm86io.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/board118.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/amd98.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/board14.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/boardspb.c"
        "${DBX_PATH}/src/hardware/snd_pc98/cbus/board86.c"
        "${DBX_PATH}/src/hardware/snd_pc98/cbus/board26k.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/cs4231io.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/pc9861k.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/cbus/cbuscore.c"
        "${DBX_PATH}/src/hardware/snd_pc98/x11/dosio.c"
        "${DBX_PATH}/src/hardware/snd_pc98/generic/keydisp.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/opngeng.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/opngenc.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/sound/s98.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/pcm86c.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/pcm86g.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/adpcmg.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/adpcmc.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/psggenc.c"
        #	"${DBX_PATH}/src/hardware/snd_pc98/sound/sndcsec.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/psggeng.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/rhythmc.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/sound.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/tms3631g.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/fmtimer.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/tms3631c.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/fmboard.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/soundrom.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/getsnd/getsnd.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/getsnd/getsmix.c"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/getsnd/getwave.c"
        "${DBX_PATH}/src/hardware/opl3duoboard/opl3duoboard.cpp"
        "${DBX_PATH}/src/hardware/serialport/serialfile.cpp"
        "${DBX_PATH}/src/hardware/serialport/serialmouse.cpp"
        "${DBX_PATH}/src/hardware/serialport/libserial.cpp"
        "${DBX_PATH}/src/hardware/serialport/serialport.cpp"
        "${DBX_PATH}/src/hardware/serialport/seriallog.cpp"
        "${DBX_PATH}/src/hardware/serialport/nullmodem.cpp"
        "${DBX_PATH}/src/hardware/serialport/serialdummy.cpp"
        "${DBX_PATH}/src/hardware/serialport/softmodem.cpp"
        "${DBX_PATH}/src/hardware/serialport/misc_util.cpp"
        "${DBX_PATH}/src/hardware/serialport/directserial.cpp"
        "${DBX_PATH}/src/hardware/RetroWaveLib/RetroWave.c"
        "${DBX_PATH}/src/hardware/RetroWaveLib/RetroWave_DOSBoX.cpp"
        "${DBX_PATH}/src/hardware/RetroWaveLib/Board/OPL3.c"
        "${DBX_PATH}/src/hardware/RetroWaveLib/Board/MiniBlaster.c"
        "${DBX_PATH}/src/hardware/RetroWaveLib/Board/MasterGear.c"
        #        "${DBX_PATH}/src/hardware/RetroWaveLib/Platform/Win32_SerialPort.c"
        #        "${DBX_PATH}/src/hardware/RetroWaveLib/Platform/STM32_HAL_SPI.c"
        "${DBX_PATH}/src/hardware/RetroWaveLib/Platform/POSIX_SerialPort.c"
        "${DBX_PATH}/src/hardware/RetroWaveLib/Platform/Linux_SPI.c"
        "${DBX_PATH}/src/hardware/RetroWaveLib/Protocol/Serial.c"
        "${DBX_PATH}/src/hardware/parport/printer_redir.cpp"
        "${DBX_PATH}/src/hardware/parport/printer.cpp"
        "${DBX_PATH}/src/hardware/parport/filelpt.cpp"
        "${DBX_PATH}/src/hardware/parport/parport.cpp"
        "${DBX_PATH}/src/hardware/parport/directlpt.cpp"
        "${DBX_PATH}/src/hardware/parport/printer_charmaps.cpp"
        "${DBX_PATH}/src/dos/drive_physfs.cpp"
        "${DBX_PATH}/src/dos/drive_cache.cpp"
        "${DBX_PATH}/src/dos/dos_files.cpp"
        "${DBX_PATH}/src/dos/dos_tables.cpp"
        "${DBX_PATH}/src/dos/dos_ioctl.cpp"
        "${DBX_PATH}/src/dos/cdrom.cpp"
        "${DBX_PATH}/src/dos/cdrom_image.cpp"
        "${DBX_PATH}/src/dos/cdrom_ioctl_linux.cpp"
        "${DBX_PATH}/src/dos/drive_overlay.cpp"
        "${DBX_PATH}/src/dos/cdrom_ioctl_os2.cpp"
        "${DBX_PATH}/src/dos/dos_mscdex.cpp"
        "${DBX_PATH}/src/dos/dos_keyboard_layout.cpp"
        "${DBX_PATH}/src/dos/dos_programs.cpp"
        "${DBX_PATH}/src/dos/dos_memory.cpp"
        "${DBX_PATH}/src/dos/drive_virtual.cpp"
        "${DBX_PATH}/src/dos/dos_classes.cpp"
        "${DBX_PATH}/src/dos/drives.cpp"
        "${DBX_PATH}/src/dos/dos_execute.cpp"
        "${DBX_PATH}/src/dos/dos_devices.cpp"
        "${DBX_PATH}/src/dos/dos.cpp"
        "${DBX_PATH}/src/dos/drive_iso.cpp"
        #	"${DBX_PATH}/src/dos/cdrom_aspi_win32.cpp"
        "${DBX_PATH}/src/dos/dos_misc.cpp"
        "${DBX_PATH}/src/dos/drive_fat.cpp"
        #	"${DBX_PATH}/src/dos/cdrom_ioctl_win32.cpp"
        "${DBX_PATH}/src/dos/drive_local.cpp"
        "${DBX_PATH}/src/cpu/flags.cpp"
        "${DBX_PATH}/src/cpu/core_normal.cpp"
        "${DBX_PATH}/src/cpu/callback.cpp"
        "${DBX_PATH}/src/cpu/core_normal_286.cpp"
        "${DBX_PATH}/src/cpu/core_simple.cpp"
        "${DBX_PATH}/src/cpu/core_prefetch_286.cpp"
        "${DBX_PATH}/src/cpu/paging.cpp"
        "${DBX_PATH}/src/cpu/mmx.cpp"
        "${DBX_PATH}/src/cpu/modrm.cpp"
        "${DBX_PATH}/src/cpu/core_dynrec.cpp"
        "${DBX_PATH}/src/cpu/core_prefetch.cpp"
        "${DBX_PATH}/src/cpu/core_normal_8086.cpp"
        "${DBX_PATH}/src/cpu/core_prefetch_8086.cpp"
        "${DBX_PATH}/src/cpu/core_dyn_x86.cpp"
        "${DBX_PATH}/src/cpu/cpu.cpp"
        "${DBX_PATH}/src/cpu/core_full.cpp"
        "${DBX_PATH}/src/shell/shell_batch.cpp"
        "${DBX_PATH}/src/shell/shell_misc.cpp"
        "${DBX_PATH}/src/shell/shell_cmds.cpp"
        "${DBX_PATH}/src/shell/shell.cpp"
        "${DBX_PATH}/src/output/output_ttf.cpp"
        "${DBX_PATH}/src/output/output_surface.cpp"
#        "${DBX_PATH}/src/output/output_direct3d.cpp"
        "${DBX_PATH}/src/output/output_tools.cpp"
#        "${DBX_PATH}/src/output/output_opengl.cpp"
#        "${DBX_PATH}/src/output/output_tools_xbrz.cpp"
        #	"${DBX_PATH}/src/output/ppscale.c"
        "${DBX_PATH}/src/output/direct3d/ScalingEffect.cpp"
        "${DBX_PATH}/src/output/direct3d/hq2x_d3d.cpp"
        "${DBX_PATH}/src/output/direct3d/direct3d.cpp"
        "${DBX_PATH}/src/aviwriter/riff_wav_writer.cpp"
        "${DBX_PATH}/src/aviwriter/avi_rw_iobuf.cpp"
        "${DBX_PATH}/src/aviwriter/ksdataformat.cpp"
        "${DBX_PATH}/src/aviwriter/avi_writer.cpp"
        "${DBX_PATH}/src/aviwriter/riff.cpp"
        "${DBX_PATH}/src/aviwriter/guid.cpp"
        #	"${DBX_PATH}/src/libs/xBRZ/xbrz.cpp"
        "${DBX_PATH}/src/libs/gui_tk/gui_tk.cpp"
        #	"${DBX_PATH}/src/libs/zmbv/zmbv.cpp"
        #	"${DBX_PATH}/src/libs/libchdr/libchdr_chd.c"
        #	"${DBX_PATH}/src/libs/libchdr/libchdr_bitstream.c"
        #	"${DBX_PATH}/src/libs/libchdr/libchdr_huffman.c"
        #	"${DBX_PATH}/src/libs/libchdr/libchdr_flac.c"
        #	"${DBX_PATH}/src/libs/libchdr/libchdr_cdrom.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/memory.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/cpu.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/format.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/stream_decoder.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/metadata_iterators.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/bitreader.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/fixed.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/windows_unicode_filenames.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/md5.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/crc.c"
        #	"${DBX_PATH}/src/libs/libchdr/FLAC/lpc.c"
        #	"${DBX_PATH}/src/libs/libchdr/lzma/LzmaEnc.c"
        #	"${DBX_PATH}/src/libs/libchdr/lzma/LzFind.c"
        #	"${DBX_PATH}/src/libs/libchdr/lzma/LzmaDec.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_event.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_iir_filter.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_seq.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_mdriver.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_aufile.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_hash.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_conv.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_rvoice_dsp.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_sdl2.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_seqbind.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_defsfont.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_dll.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_chorus.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_rev.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_rvoice.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_tuning.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_rvoice_mixer.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_synth.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_midi_router.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_chan.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_gen.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_list.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_lfo.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_sys.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_dsound.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_filerenderer.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_adsr_env.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_ramsfont.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_cmd.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_midi.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_rvoice_event.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_settings.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_mod.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_ringbuffer.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_voice.c"
        "${DBX_PATH}/src/libs/fluidsynth/fluid_adriver.c"
        #        	"${DBX_PATH}/src/libs/porttalk/porttalk.cpp"
        #        	"${DBX_PATH}/src/libs/decoders/vorbis.c"
        #        	"${DBX_PATH}/src/libs/decoders/mp3.cpp"
        #        	"${DBX_PATH}/src/libs/decoders/audio_convert.c"
        #        	"${DBX_PATH}/src/libs/decoders/mp3_seek_table.cpp"
        #        	"${DBX_PATH}/src/libs/decoders/SDL_sound.c"
        #        	"${DBX_PATH}/src/libs/decoders/opus.c"
        #        	"${DBX_PATH}/src/libs/decoders/wav.c"
        #        	"${DBX_PATH}/src/libs/decoders/flac.c"
        "${DBX_PATH}/src/libs/decoders/internal/ogg/framing.c"
        "${DBX_PATH}/src/libs/decoders/internal/ogg/bitwise.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/kiss_fft.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/rate.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/mdct.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/cwrs.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/modes.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/celt_decoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/quant_bands.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/vq.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/mathops.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/celt_lpc.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/celt_encoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/pitch.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/laplace.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/entenc.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/entdec.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/entcode.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/bands.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/celt/celt.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/vq_sse2.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/pitch_sse4_1.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/pitch_sse2.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/x86cpu.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/x86_celt_map.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/celt_lpc_sse4_1.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/x86/pitch_sse.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/arm/celt_mdct_ne10.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/arm/armcpu.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/arm/arm_celt_map.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/arm/celt_neon_intr.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/arm/celt_fft_ne10.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/celt/arm/pitch_neon_intr.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decode_parameters.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/gain_quant.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/VQ_WMat_EC.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/init_encoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_encode.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_pulses_per_block.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/check_control_input.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/control_audio_bandwidth.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/interpolate.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_decode.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/control_codec.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/LPC_analysis_filter.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/stereo_LR_to_MS.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_gain.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/PLC.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/quant_LTP_gains.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NSQ.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/LPC_fit.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/table_LSF_cos.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decode_indices.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_unpack.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/stereo_find_predictor.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/shell_coder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/LP_variable_cutoff.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/process_NLSFs.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decode_core.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/pitch_est_tables.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_pitch_lag.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/stereo_quant_pred.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_down2.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/ana_filt_bank_1.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/A2NLSF.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/sort.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decode_pulses.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_stabilize.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_private_AR2.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_NLSF_CB_WB.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_private_IIR_FIR.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/dec_API.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/debug_silk.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/LPC_inv_pred_gain.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_NLSF_CB_NB_MB.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/sigm_Q15.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NSQ_del_dec.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/bwexpander.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decode_frame.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/control_SNR.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/enc_API.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/stereo_decode_pred.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/encode_indices.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/HP_variable_cutoff.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/code_signs.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/log2lin.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/biquad_alt.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_LTP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_private_up2_HQ.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_del_dec_quant.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/bwexpander_32.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_rom.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_private_down_FIR.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_VQ_weights_laroia.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/resampler_down2_3.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/tables_other.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/CNG.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF_VQ.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/lin2log.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/stereo_encode_pred.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/NLSF2A.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/stereo_MS_to_LR.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/VAD.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decode_pitch.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/decoder_set_fs.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/encode_pulses.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/inner_prod_aligned.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/init_decoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/sum_sqr_shift.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/LPC_analysis_filter_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/LTP_analysis_filter_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/regularize_correlations_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/process_gains_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/inner_product_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/LPC_inv_pred_gain_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/find_pred_coefs_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/encode_frame_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/find_pitch_lags_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/schur_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/energy_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/sort_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/warped_autocorrelation_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/find_LTP_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/apply_sine_window_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/burg_modified_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/LTP_scale_ctrl_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/scale_copy_vector_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/scale_vector_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/pitch_analysis_core_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/noise_shape_analysis_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/bwexpander_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/corrMatrix_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/find_LPC_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/autocorrelation_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/wrappers_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/residual_energy_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/silk/float/k2a_FLP.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/mlp.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opussrc.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_decoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_projection_decoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/analysis.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_multistream_encoder.c"
        #        	"${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_compare.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_multistream_decoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/repacketizer.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_projection_encoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_encoder.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/mlp_data.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/mapping_matrix.c"
        "${DBX_PATH}/src/libs/decoders/internal/opus/src/opus_multistream.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/buffer.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/fftwrap.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/kiss_fftr.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/jitter.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/kiss_fft_speex.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/filterbank.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/resample.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/smallft.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/preprocess.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/mdf.c"
        "${DBX_PATH}/src/libs/decoders/internal/speexdsp/scal.c"
        "${DBX_PATH}/src/libs/decoders/internal/opusfile/opusfile.c"
        "${DBX_PATH}/src/libs/decoders/internal/opusfile/info.c"
        "${DBX_PATH}/src/libs/decoders/internal/opusfile/internal.c"
        "${DBX_PATH}/src/libs/decoders/internal/opusfile/http.c"
        "${DBX_PATH}/src/libs/decoders/internal/opusfile/wincerts.c"
        "${DBX_PATH}/src/libs/decoders/internal/opusfile/stream.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_qnx.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_7z.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_unix.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_slb.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_winrt.cpp"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_mvl.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_wad.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_os2.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_haiku.cpp"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_windows.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_unpacked.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_unicode.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_vdf.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_dir.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_byteorder.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_iso9660.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_qpak.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_platform_posix.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_grp.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_hog.c"
        #	"${DBX_PATH}/src/libs/physfs/physfs_archiver_zip.c"
        #	"${DBX_PATH}/src/libs/mt32/Analog.cpp"
        #	"${DBX_PATH}/src/libs/mt32/PartialManager.cpp"
        #	"${DBX_PATH}/src/libs/mt32/LA32WaveGenerator.cpp"
        #	"${DBX_PATH}/src/libs/mt32/VersionTagging.cpp"
        #	"${DBX_PATH}/src/libs/mt32/Part.cpp"
        #	"${DBX_PATH}/src/libs/mt32/TVF.cpp"
        #	"${DBX_PATH}/src/libs/mt32/ROMInfo.cpp"
        #	"${DBX_PATH}/src/libs/mt32/TVP.cpp"
        #	"${DBX_PATH}/src/libs/mt32/Poly.cpp"
        #	"${DBX_PATH}/src/libs/mt32/SampleRateConverter.cpp"
        #	"${DBX_PATH}/src/libs/mt32/Tables.cpp"
        #	"${DBX_PATH}/src/libs/mt32/TVA.cpp"
        #	"${DBX_PATH}/src/libs/mt32/Display.cpp"
        #	"${DBX_PATH}/src/libs/mt32/Synth.cpp"
        #	"${DBX_PATH}/src/libs/mt32/FileStream.cpp"
        #	"${DBX_PATH}/src/libs/mt32/File.cpp"
        #	"${DBX_PATH}/src/libs/mt32/LA32Ramp.cpp"
        #	"${DBX_PATH}/src/libs/mt32/Partial.cpp"
        #	"${DBX_PATH}/src/libs/mt32/MidiStreamParser.cpp"
        #	"${DBX_PATH}/src/libs/mt32/LA32FloatWaveGenerator.cpp"
        #	"${DBX_PATH}/src/libs/mt32/BReverbModel.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/SoxrAdapter.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/SamplerateAdapter.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/InternalResampler.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/srctools/src/IIR2xResampler.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/srctools/src/SincResampler.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/srctools/src/LinearResampler.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/srctools/src/ResamplerModel.cpp"
        #	"${DBX_PATH}/src/libs/mt32/srchelper/srctools/src/FIRResampler.cpp"
        #	"${DBX_PATH}/src/libs/mt32/c_interface/c_interface.cpp"
        #	"${DBX_PATH}/src/libs/mt32/sha1/sha1.cpp"
        "${DBX_PATH}/src/gui/ptrop.cpp"
        "${DBX_PATH}/src/gui/render.cpp"
        "${DBX_PATH}/src/gui/midi.cpp"
        "${DBX_PATH}/src/gui/bitop.cpp"
        "${DBX_PATH}/src/gui/menu.cpp"
        "${DBX_PATH}/src/gui/render_scalers.cpp"
        #	"${DBX_PATH}/src/gui/whereami.c"
        "${DBX_PATH}/src/gui/sdl_gui.cpp"
        "${DBX_PATH}/src/gui/sdl_mapper.cpp"
        "${DBX_PATH}/src/gui/zipcrc.c"
        "${DBX_PATH}/src/gui/menu_callback.cpp"
        # @caiiiycuk: ncurses dep
        #        "${DBX_PATH}/src/gui/display2.cpp"
        "${DBX_PATH}/src/gui/zipfile.cpp"
        #	"${DBX_PATH}/src/gui/sdl_ttf.c"
        "${DBX_PATH}/src/ints/bios.cpp"
        "${DBX_PATH}/src/ints/int_dosv.cpp"
        "${DBX_PATH}/src/ints/pc98_lio.cpp"
        "${DBX_PATH}/src/ints/int10_pal.cpp"
        "${DBX_PATH}/src/ints/int10_vesa.cpp"
        "${DBX_PATH}/src/ints/int10_put_pixel.cpp"
        "${DBX_PATH}/src/ints/mouse.cpp"
        "${DBX_PATH}/src/ints/int10_char.cpp"
        "${DBX_PATH}/src/ints/ems.cpp"
        "${DBX_PATH}/src/ints/int10.cpp"
        "${DBX_PATH}/src/ints/bios_vhd.cpp"
        "${DBX_PATH}/src/ints/int10_misc.cpp"
        "${DBX_PATH}/src/ints/int10_modes.cpp"
        "${DBX_PATH}/src/ints/xms.cpp"
        "${DBX_PATH}/src/ints/int10_video_state.cpp"
        "${DBX_PATH}/src/ints/bios_memdisk.cpp"
        "${DBX_PATH}/src/ints/int10_memory.cpp"
        "${DBX_PATH}/src/ints/qcow2_disk.cpp"
        "${DBX_PATH}/src/ints/int10_vptable.cpp"
        "${DBX_PATH}/src/ints/bios_keyboard.cpp"
        "${DBX_PATH}/src/ints/bios_disk.cpp"
        "${DBX_PATH}/src/fpu/fpu.cpp"
        # "${DBX_PATH}/src/builtin/replace_exe.cpp"
        # "${DBX_PATH}/src/builtin/hexmem32_exe.cpp"
        # "${DBX_PATH}/src/builtin/dosidle_exe.cpp"
        # "${DBX_PATH}/src/builtin/buffers_com.cpp"
        # "${DBX_PATH}/src/builtin/fdisk_exe.cpp"
        # "${DBX_PATH}/src/builtin/hexmem16_exe.cpp"
        # "${DBX_PATH}/src/builtin/25_com.cpp"
        # "${DBX_PATH}/src/builtin/format_exe.cpp"
        # "${DBX_PATH}/src/builtin/sort_exe.cpp"
        # "${DBX_PATH}/src/builtin/mem_com.cpp"
        # "${DBX_PATH}/src/builtin/lastdriv_com.cpp"
        # "${DBX_PATH}/src/builtin/defrag_exe.cpp"
        # "${DBX_PATH}/src/builtin/move_exe.cpp"
        # "${DBX_PATH}/src/builtin/chkdsk_exe.cpp"
        # "${DBX_PATH}/src/builtin/diskcopy_exe.cpp"
        # "${DBX_PATH}/src/builtin/28_com.cpp"
        # "${DBX_PATH}/src/builtin/dsxmenu_exe_pc.cpp"
        # "${DBX_PATH}/src/builtin/sys_com.cpp"
        # "${DBX_PATH}/src/builtin/files_com.cpp"
        # "${DBX_PATH}/src/builtin/dsxmenu_exe_pc98.cpp"
        # "${DBX_PATH}/src/builtin/device_com.cpp"
        # "${DBX_PATH}/src/builtin/cwsdpmi_exe.cpp"
        # "${DBX_PATH}/src/builtin/edit_com.cpp"
        # "${DBX_PATH}/src/builtin/fcbs_com.cpp"
        # "${DBX_PATH}/src/builtin/50_com.cpp"
        # "${DBX_PATH}/src/builtin/dos4gw_exe.cpp"
        # "${DBX_PATH}/src/builtin/append_exe.cpp"
        # "${DBX_PATH}/src/builtin/fc_exe.cpp"
        # "${DBX_PATH}/src/builtin/debug_exe.cpp"
        # "${DBX_PATH}/src/builtin/print_com.cpp"
        # "${DBX_PATH}/src/builtin/dos32a_exe.cpp"
        "${DBX_PATH}/src/builtin/xcopy_exe.cpp"
        # "${DBX_PATH}/src/builtin/find_exe.cpp"
        # "${DBX_PATH}/src/tool/mach-o-matic.cpp"
        "${DBX_PATH}/src/debug/debug.cpp"
        "${DBX_PATH}/src/debug/debug_disasm.cpp"
        #	"${DBX_PATH}/src/debug/debug_win32.cpp"
        )

if (APPLE)
    list(APPEND SOURCES_X_CORE
            "${DBX_PATH}/src/gui/menu_macos.mm"
            "${DBX_PATH}/src/libs/physfs/physfs_platform_apple.mm"
            )
endif ()

set(SOURCES_X_SDL_MAIN
        "${DBX_PATH}/src/gui/sdlmain.cpp"
        "${DBX_PATH}/src/gui/sdlmain_linux.cpp"
        "${DBX_PATH}/src/debug/debug_gui.cpp"
        "${DBX_PATH}/src/hardware/mixer.cpp"
        "${DBX_PATH}/src/hardware/ipx.cpp"
        "${DBX_PATH}/src/hardware/ipxserver.cpp"
        "${NATIVE_DIR}/sockdrive/lib/ffi/SDL2/sockdrive.cpp"
        )

set(SOURCES_X_JSDOS_CORE
        "${NATIVE_DIR}/jsdos/dosbox-x/jsdos-x-render.cpp"
        "${NATIVE_DIR}/jsdos/dosbox-x/jsdos-x-tinyfd.cpp"
        "${NATIVE_DIR}/jsdos/jsdos-asyncify.cpp"
        "${NATIVE_DIR}/jsdos/jsdos-timer.cpp"
        "${NATIVE_DIR}/jsdos/jsdos-support.cpp"
        "${NATIVE_DIR}/jsdos/jsdos-events.cpp"
        "${NATIVE_DIR}/jsdos/jsdos-drive.cpp"
        )

set(SOURCES_X_JSDOS_MAIN
        "${NATIVE_DIR}/jsdos/jsdos-log.cpp"
        "${NATIVE_DIR}/jsdos/dosbox-x/jsdos-x-mixer.cpp"
        "${NATIVE_DIR}/jsdos/dosbox-x/jsdos-x-main.cpp"
        "${NATIVE_DIR}/jsdos/jsdos-ipx.cpp"
        "${NATIVE_DIR}/sdl2net/SDLnet.c"
        "${NATIVE_DIR}/sdl2net/SDLnetTCP.c"
        "${NATIVE_DIR}/sdl2net/SDLnetselect.c"
        "${NATIVE_DIR}/sockdrive/lib/ffi/asyncify/sockdrive.cpp"
        )

add_library(libdosbox-x-sdl2 OBJECT ${SOURCES_X_SDL} ${SOURCES_X_CORE} ${SOURCES_X_JSDOS_CORE})
target_compile_definitions(libdosbox-x-sdl2 PUBLIC ${DEFINITIONS_CORE_X})
set_property(TARGET libdosbox-x-sdl2 PROPERTY CXX_STANDARD 11)

add_library(libdosbox-x-jsdos OBJECT ${SOURCES_X_SDL} ${SOURCES_X_CORE} ${SOURCES_X_JSDOS_CORE}
        ${SOURCES_X_JSDOS_MAIN})
target_compile_definitions(libdosbox-x-jsdos
        PUBLIC ${DEFINITIONS_CORE_X}
        PUBLIC "-DJSDOS_X")
set_property(TARGET libdosbox-x-jsdos PROPERTY CXX_STANDARD 11)

set(DOSBOX_X_INCLUDE_DIRECTORIES
        "${NATIVE_DIR}/config"
        "${NATIVE_DIR}/jsdos/include"
        "${DBX_PATH}/include"
        "${DBX_PATH}/src/aviwriter"
        "${DBX_PATH}/src/hardware/snd_pc98/cbus"
        "${DBX_PATH}/src/hardware/snd_pc98/sound/getsnd"
        "${DBX_PATH}/src/hardware/snd_pc98/sound"
        "${DBX_PATH}/src/hardware/snd_pc98/generic"
        "${DBX_PATH}/src/hardware/snd_pc98/common"
        "${DBX_PATH}/src/hardware/snd_pc98/x11"
        "${DBX_PATH}/src"
        "${DBX_PATH}"
        "${SDL2_INCLUDE_DIRS}"
        )

target_include_directories(libdosbox-x-sdl2 PUBLIC
        ${DOSBOX_X_INCLUDE_DIRECTORIES}
        )

target_include_directories(libdosbox-x-jsdos PUBLIC
        ${DOSBOX_X_INCLUDE_DIRECTORIES}
        "${DBX_PATH}/src/gui"
        "${NATIVE_DIR}/sdl2net"
        )

add_executable(dosbox-x-sdl2 ${SOURCES_X_SDL_MAIN})
target_link_libraries(dosbox-x-sdl2 libdosbox-x-sdl2)
set_property(TARGET dosbox-x-sdl2 PROPERTY CXX_STANDARD 11)

if (${EMSCRIPTEN})
    target_compile_options(libdosbox-x-jsdos PUBLIC -fwasm-exceptions)
    set_target_properties(dosbox-x-sdl2 PROPERTIES SUFFIX .html)
    target_link_options(dosbox-x-sdl2 PUBLIC
            ${EM_LINK_OPTIONS}
            "-sUSE_ZLIB=1"
            "-sUSE_SDL=2"
            "-sMODULARIZE=0"
            "-sINVOKE_RUN=1"
            "--profiling-funcs"
            "-sASYNCIFY=1"
            )

    add_executable(wdosbox-x "${SRC_DIR}/dos/dosbox/cpp/worker-protocol.cpp")
    set_target_properties(wdosbox-x PROPERTIES SUFFIX .js)
    target_link_libraries(wdosbox-x libdosbox-x-jsdos libzip)
    # TODO: set sERROR_ON_UNDEFINED_SYMBOLS=1
    target_link_options(wdosbox-x PUBLIC
            ${EM_LINK_OPTIONS}
            -fwasm-exceptions
            "-sUSE_ZLIB=1"
            "-sUSE_SDL=2"
        #    "--profiling-funcs"
        #    "-sASSERTIONS=1"
        #    "-sSAFE_HEAP=2"
            "-sASYNCIFY=1"
            "-sASYNCIFY_IMPORTS=['syncSleep']"
            "-sASYNCIFY_WHITELIST=@${TARGETS_DIR}/dosbox-x-asyncify.txt"
            "-sEXPORT_NAME='WDOSBOXX'"
            "-sERROR_ON_UNDEFINED_SYMBOLS=0")
elseif (APPLE)
    target_link_libraries(dosbox-x-sdl2
            ${SDL2_LIBRARIES}
            sdl2_net
            "-framework CoreAudio"
            "-framework AudioToolbox"
            "-framework ForceFeedback"
            "-framework CoreVideo"
            "-framework Cocoa"
            "-framework Carbon"
            "-framework IOKit"
            "-weak_framework QuartzCore"
            "-weak_framework Metal"
            "-framework OpenGL"
            "-framework Carbon"
            "-framework CoreFoundation"
            "-framework CoreMIDI"
            "-framework AudioUnit"
            "-framework AudioToolbox"
            "-framework ApplicationServices"
            "-framework AppKit"
            "-framework IOKit"
            ncurses
            z)
elseif (MINGW)
    target_link_libraries(dosbox-x-sdl2 libsdl libsdl_net z ws2_32 mingw32 winmm)
else ()
    target_link_libraries(dosbox-x-sdl2
            X11 z ncurses dl GL pthread asound
            SDL2 SDL2_mixer SDL2_net)
endif ()

if (${EMSCRIPTEN})
    target_compile_options(libdosbox-x-sdl2 PUBLIC "-sUSE_SDL=2")
    target_compile_options(libdosbox-x-jsdos PUBLIC "-sUSE_SDL=2")
elseif (X86_64)
    target_compile_definitions(libdosbox-x-sdl2 PUBLIC -DX86_64)
    target_compile_definitions(libdosbox-x-jsdos PUBLIC -DX86_64)
elseif (X86)
    target_compile_definitions(libdosbox-x-sdl2 PUBLIC -DX86)
    target_compile_definitions(libdosbox-x-jsdos PUBLIC -DX86)
else ()
    set_target_properties(libdosbox-x-sdl2 PROPERTIES COMPILE_FLAGS "-m32" LINK_FLAGS "-m32")
    set_target_properties(libdosbox-x-jsdos PROPERTIES COMPILE_FLAGS "-m32" LINK_FLAGS "-m32")
endif ()
